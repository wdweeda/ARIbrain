% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ARIcluster.R
\name{ARIcluster}
\alias{ARIcluster}
\title{All-Resolutions Inference (ARI) for Cluster Thresholding}
\usage{
ARIcluster(
  Pmap,
  gamma,
  outname = "ARIcluster.nii.gz",
  mask = NULL,
  Statmap = function(ix) -qnorm(Pmap[ix]),
  conn = 18,
  alpha = 0.05,
  rest = FALSE,
  silent = FALSE
)
}
\arguments{
\item{Pmap}{3D array of p-values or a (character) nifti file name.}

\item{gamma}{A pre-specified TDP threshold for forming maximal clusters.}

\item{outname}{Specify nifti file name for writing out cluster array of cluster ids. By default, "ARIcluster.nii.gz" is used.}

\item{mask}{3D array of logicals (i.e., \code{TRUE}/\code{FALSE} in/out of the brain). Alternatively, it may be a (character) nifti file name. If \code{mask = NULL}, it is assumed that none of the voxels have to be excluded.}

\item{Statmap}{Statistics (usually t-values) on which the summaries are based. Can be either a 3D array, a (character) nifti file name or a function with argument \code{ix} used in the function to select the voxels belonging to a given cluster. By default, \code{Statmap = function(ix) -qnorm(Pmap[ix])} converts the p-values to one-sided z-scores.}

\item{conn}{Connectivity criterion, which can be chosen among 6, 18 (by default), and 26 for face, edge, and vertex connectivity.}

\item{alpha}{Significance level. \code{alpha = 0.05} by default.}

\item{rest}{logical; information for the rest of the brain is not shown in the summary table if \code{FALSE} (by default).}

\item{silent}{logical; print summary table on screen if \code{FALSE} by default.}
}
\value{
A \code{matrix} reporting Size, FalseNull, TrueNull, ActiveProp and other summary statistics for each cluster.
}
\description{
Given a TDP threshold, it quickly finds all maximal supra-threshold clusters using ARI, each with the TDP not smaller than the threshold.
}
\examples{
pvalue_name <- system.file("extdata", "pvalue.nii.gz", package = "ARIbrain")
zstat_name <- system.file("extdata", "zstat.nii.gz", package = "ARIbrain")
mask_name <- system.file("extdata", "mask.nii.gz", package = "ARIbrain")

print(mask_name)
print(pvalue_name)
print(zstat_name)

ARIcluster(Pmap = pvalue_name, mask = mask_name, Statmap = zstat_name, gamma = 0.5)
    
}
