% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ARIcluster-class.R
\docType{class}
\name{ARIcluster-class}
\alias{ARIcluster-class}
\title{Class "ARIcluster" for storing results of adaptive thresholding algorithm}
\value{
Returns an \code{\link{ARIcluster-class}} object.
}
\description{
The class ARIcluster is the output of a call to \code{\link{ARIcluster}}. It stores the information needed to quickly answer queries, i.e., find all maximal supra-threshold clusters given a TDP threshold.
}
\section{Slots}{

\describe{
\item{\code{m}}{Object of class "integer". Stores the number of in-mask voxels.}

\item{\code{alpha}}{Object of class "numeric". Stores the significance level.}

\item{\code{indexp}}{Object of class "integer". Stores the voxel indices of sorted p-values.}

\item{\code{sortp}}{Object of class "numeric". Stores sorted p-values for all in-mask voxels.}

\item{\code{stcs}}{Object of class "integer". Stores the representative node indices of all admissible supra-threshold clusters.}

\item{\code{sizes}}{Object of class "integer". Stores the subtree sizes (cluster extents) for all nodes.}

\item{\code{tdps}}{Object of class "numeric". Stores the TDP lower confidence bounds for all supra-threshold clusters.}

\item{\code{childs}}{Object of class "list". Stores a list of vectors of child nodes for all nodes.}

\item{\code{marks}}{Object of class "integer". Initializes a vector to mark nodes within found clusters.}

\item{\code{img_clus}}{Object of class "array". Initializes a cluster array for outputting nifti file.}

\item{\code{tmp}}{Object of class "character". Stores the reference nifti file name for writing cluster image in niti format. If empty, default image parameters will be used (see Details in \code{?RNifti::asNifti}).}
}}

\examples{
pvalue_name <- system.file("extdata", "pvalue.nii.gz", package = "ARIbrain")
mask_name <- system.file("extdata", "mask.nii.gz", package = "ARIbrain")

# (1) create an ARIcluster object
ariclstr <- ARIcluster(Pmap = pvalue_name, mask = mask_name)
show(ariclstr)

# (2) answer queries: find all maximal clusters given a TDP threshold
res <- TDPquery(ariclstr, gamma = 0.7)
res
    
}
\author{
Xu Chen, Thijmen Krebs, Wouter Weeda.
}
